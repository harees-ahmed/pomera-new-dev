name: Daily Supabase Database Backup

on:
  schedule:
    # Run daily at 2:00 AM UTC (adjust timezone as needed)
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Supabase CLI
        run: |
          # Install Supabase CLI using the official installation method
          curl -fsSL https://supabase.com/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Create backup directory
        run: mkdir -p backups

      - name: Run backup script
        run: |
          chmod +x scripts/backup-supabase.sh
          ./scripts/backup-supabase.sh
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          BACKUP_RETENTION_DAYS: 7

      - name: Upload backup to GitHub Releases
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: supabase-backup-${{ env.BACKUP_FILE }}
          path: backups/${{ env.BACKUP_FILE }}
          retention-days: 30

      - name: Upload to cloud storage (optional)
        if: env.AWS_ACCESS_KEY_ID != ''
        run: |
          # Install AWS CLI
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          
          # Upload to S3
          aws s3 cp "backups/${{ env.BACKUP_FILE }}" "s3://${{ secrets.S3_BUCKET_NAME }}/supabase-backups/"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Backup summary
        run: |
          echo "Backup completed successfully!"
          echo "Files created:"
          ls -la backups/
          echo "Backup size:"
          du -h backups/${{ env.BACKUP_FILE }}
